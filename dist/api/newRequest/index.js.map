{"version":3,"sources":["../../../src/api/newRequest/index.js"],"names":["config","db","api","post","req","res","STATUS_UNAUTHORIZED","STATUS_SERVER_ERROR","apiId","get","userLogin","status","send","console","log","JSON","stringify","query","body","notaryData","httpReq","process","env","LOGGI_API_V2","set","end","err","apiRes","json","newRequestId"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;kBAGe,gBAAoB;AAAA,QAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,QAATC,EAAS,QAATA,EAAS;;AAClC,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,GAAT,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrB,YAAMC,sBAAsB,GAA5B;AACA,YAAMC,sBAAsB,GAA5B;AACA,YAAMC,QAAQJ,IAAIK,GAAJ,CAAQ,eAAR,CAAd;AACA,YAAMC,YAAYN,IAAIK,GAAJ,CAAQ,WAAR,CAAlB;;AAEA,YAAG,CAACD,KAAJ,EAAU;AACNH,gBAAIM,MAAJ,CAAWL,mBAAX,EAAgCM,IAAhC,CAAqC,iBAArC;AACH,SAFD,MAGI;AACAC,oBAAQC,GAAR,CAAYC,KAAKC,SAAL,CAAe;AACvBC,uBAAO,qBAAMb,IAAIc,IAAV,EAAgBC,oBAAhB;AADgB,aAAf,CAAZ;AAGAC,iCAAQjB,IAAR,CAAakB,QAAQC,GAAR,CAAYC,YAAzB,EACKN,KADL,CACW;AACHA,uBAAO,qBAAMb,IAAIc,IAAV,EAAgBC,oBAAhB;AADJ,aADX,EAIKK,GAJL,CAIS,eAJT,cAIoCd,SAJpC,SAIiDF,KAJjD,EAKKiB,GALL,CAKS,UAACC,GAAD,EAAMC,MAAN,EAAiB;;AAElB,oBAAGD,GAAH,EAAO;AACHb,4BAAQC,GAAR,CAAY,0BAAZ,EAAwCY,IAAIrB,GAAJ,CAAQa,IAAhD;AACAb,wBAAIM,MAAJ,CAAWJ,mBAAX,EAAgCK,IAAhC,CAAqC,6BAArC;AACAP,wBAAIoB,GAAJ;AACH,iBAJD,MAKI;AACApB,wBAAIuB,IAAJ,CAAS;AACLC,sCAAc;AADT,qBAAT;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,aA3BL;AA4BH;AACP,KA1CD;;AA4CA,WAAO3B,GAAP;AACA,C","file":"index.js","sourcesContent":["import { Router } from 'express'\nimport httpReq from 'superagent'\nimport query from './query/index'\nimport notaryData from '../entities/notaryData'\n\n\nexport default ({ config, db }) => {\n\tlet api = Router();\n\n\t// perhaps expose some API metadata at the root\n\tapi.post('/', (req, res) => {\n        const STATUS_UNAUTHORIZED = 401\n        const STATUS_SERVER_ERROR = 500\n        const apiId = req.get('Authorization')\n        const userLogin = req.get('UserLogin')\n\n        if(!apiId){\n            res.status(STATUS_UNAUTHORIZED).send('Unauthenticated')\n        }\n        else{\n            console.log(JSON.stringify({\n                query: query(req.body, notaryData)\n            }))\n            httpReq.post(process.env.LOGGI_API_V2)\n                .query({\n                    query: query(req.body, notaryData)\n                })\n                .set('authorization', `Apikey ${userLogin}:${apiId}`)\n                .end((err, apiRes) => {\n                    \n                    if(err){\n                        console.log('Error at API new request', err.res.body)\n                        res.status(STATUS_SERVER_ERROR).send('Error in client API request')\n                        res.end()\n                    }\n                    else{\n                        res.json({\n                            newRequestId: 1234\n                        })\n                        // if(apiRes.body.errors.length >= 0){\n                        //     res.status(STATUS_SERVER_ERROR).send('API request is done but there\"s errors ')\n                        //     console.log('Errors at API new request return', JSON.stringify(apiRes.body.errors))\n                        //     res.end()\n                        // }\n                        // else{\n                        //     res.json({\n                        //         newRequestId: apiRes.body\n                        //     })\n                        // }\n                    }\n                });\n        }\n\t});\n\n\treturn api;\n}\n"]}