{"version":3,"sources":["../../../../../src/api/purchase/approve/services/email.js"],"names":["service","emailTo","clientName","message","Promise","resolve","reject","transporter","nodemailer","createTransport","host","process","env","EMAIL_HOST","port","EMAIL_PORT","secure","IS_EMAIL_SECURE","auth","user","EMAIL_FROM","pass","EMAIL_ACCOUNT_PASSWORD","mailOptions","from","EMAIL_FROM_NAME","to","subject","html","sendMail","then","info","console","log","messageId","catch","err","data"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU,CAACC,OAAD,EAAUC,UAAV,EAAsBC,OAAtB,EAAkC;;AAEhD,SAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,QAAG;;AAED,UAAIC,cAAcC,qBAAWC,eAAX,CAA2B;AAC3CC,cAAMC,QAAQC,GAAR,CAAYC,UADyB;AAE3CC,cAAMH,QAAQC,GAAR,CAAYG,UAFyB;AAG3CC,gBAAQL,QAAQC,GAAR,CAAYK,eAHuB,EAGN;AACrCC,cAAM;AACJC,gBAAMR,QAAQC,GAAR,CAAYQ,UADd;AAEJC,gBAAMV,QAAQC,GAAR,CAAYU;AAFd;AAJqC,OAA3B,CAAlB;;AAUA,UAAMC,cAAc;AAClBC,qBAAUb,QAAQC,GAAR,CAAYa,eAAtB,YAA2Cd,QAAQC,GAAR,CAAYQ,UAAvD,MADkB,EACoD;AACtEM,YAAIzB,OAFc,EAEL;AACb0B,iBAAS,yBAHS,EAGkB;AACpCC,2CACa1B,UADb,4BAEOC,OAFP,yEAJkB,CAQhB;AARgB,OAApB;;AAWAI,kBAAYsB,QAAZ,CAAqBN,WAArB,EACCO,IADD,CACM,UAACC,IAAD,EAAQ;AACZC,gBAAQC,GAAR,CAAY,kBAAZ,EAAgCF,KAAKG,SAArC;AACA7B;AACD,OAJD,EAMC8B,KAND,CAMO,UAACC,GAAD,EAAO;AACZ9B,eAAO;AACLH,gDAAoCF,OAApC,qBADK;AAELoC,gBAAMD;AAFD,SAAP;AAID,OAXD;AAYD,KAnCD,CAoCA,OAAMA,GAAN,EAAU;AACR9B,aAAO;AACLH,8CAAoCF,OAD/B;AAELoC,cAAMD;AAFD,OAAP;AAID;AACF,GA5CM,CAAP;AA6CD,CA/CD;;kBAiDepC,O","file":"email.js","sourcesContent":["import nodemailer from \"nodemailer\"\n\nconst service = (emailTo, clientName, message) => { \n\n  return new Promise( (resolve, reject) => {\n\n    try{\n\n      let transporter = nodemailer.createTransport({\n        host: process.env.EMAIL_HOST,\n        port: process.env.EMAIL_PORT,\n        secure: process.env.IS_EMAIL_SECURE, // true for 465, false for other ports\n        auth: {\n          user: process.env.EMAIL_FROM,\n          pass: process.env.EMAIL_ACCOUNT_PASSWORD\n        }\n      })\n\n      const mailOptions = {\n        from: `\"${process.env.EMAIL_FROM_NAME}\" <${process.env.EMAIL_FROM}>`, // sender address\n        to: emailTo, // list of receivers\n        subject: \"20º Cartório - Delivery\", // Subject line\n        html: `\n          <h5>Olá, ${clientName}</h5>\n          <p>${message}</p>\n          <p><strong>20º Cartório</strong></p>\n        ` // html body\n      };\n\n      transporter.sendMail(mailOptions)\n      .then((info)=>{\n        console.log(\"Message sent: %s\", info.messageId)\n        resolve()\n      })\n\n      .catch((err)=>{\n        reject({\n          message: `Error in send e-mail to ${emailTo}, after data set`,\n          data: err\n        })\n      })\n    }\n    catch(err){\n      reject({\n        message: `Error in send e-mail to ${emailTo}`,\n        data: err\n      })\n    }\n  })\n}\n\nexport default service"]}