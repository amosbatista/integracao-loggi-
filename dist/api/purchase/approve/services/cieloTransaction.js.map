{"version":3,"sources":["../../../../../src/api/purchase/approve/services/cieloTransaction.js"],"names":["validate","paymentData","totalAmount","cardNumber","nameFromCard","cvv","brand","creditCardInstallments","service","Promise","resolve","reject","message","httpReq","post","process","env","CIELO_API_REQUEST","send","JSON","stringify","CIELO_API_MERCHANTID","set","CIELO_API_MERCHANTKEY","end","err","apiRes","data","transactionStatusApproved","transactionStatusApproved2","body","Payment","ReturnCode","ReturnMessage"],"mappings":";;;;;;AAAA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,WAAW,SAAXA,QAAW,CAACC,WAAD,EAAiB;;AAEhC,SAAOA,YAAYC,WAAZ,IACPD,YAAYE,UADL,IAEPF,YAAYG,YAFL,IAGPH,YAAYD,QAHL,IAIPC,YAAYI,GAJL,IAKPJ,YAAYK,KALZ;AAMD,CARD;;AAUA,IAAMC,yBAAyB,CAA/B;;AAEA,IAAMC,UAAU,SAAVA,OAAU,CAACP,WAAD,EAAiB;;AAE/B,SAAO,IAAIQ,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,QAAG,CAACX,SAASC,WAAT,CAAJ,EAA2B;AACzBU,aAAO;AACLC,iBAAS;AADJ,OAAP;AAGD;;AAEDC,yBAAQC,IAAR,CAAaC,QAAQC,GAAR,CAAYC,iBAAZ,GAAgC,UAA7C,EACCC,IADD,CACMC,KAAKC,SAAL,CAAe;AACnB,yBAAmBL,QAAQC,GAAR,CAAYK,oBADZ;AAEnB,kBAAW;AACR,gBAAQpB,YAAYG;AADZ,OAFQ;AAKnB,iBAAU;AACR,gBAAO,YADC;AAER,kBAAUH,YAAYC,WAFd;AAGR,wBAAgBK,sBAHR;AAIR,sBAAa;AACX,wBAAaN,YAAYE,UADd;AAEX,oBAAUF,YAAYG,YAFX;AAGX,4BAAkBH,YAAYD,QAHnB;AAIX,0BAAeC,YAAYI,GAJhB;AAKX,mBAASJ,YAAYK;AALV;AAJL;AALS,KAAf,CADN,EAmBCgB,GAnBD,CAmBK,cAnBL,EAmBqB,kBAnBrB,EAoBCA,GApBD,CAoBK,YApBL,EAoBmBP,QAAQC,GAAR,CAAYK,oBApB/B,EAqBCC,GArBD,CAqBK,aArBL,EAqBoBP,QAAQC,GAAR,CAAYO,qBArBhC,EAuBCC,GAvBD,CAuBK,UAACC,GAAD,EAAMC,MAAN,EAAiB;;AAEpB,UAAGD,GAAH,EAAO;AACLd,eAAO;AACLC,mBAAS,oCADJ;AAELe,gBAAMF;AAFD,SAAP;AAID,OALD,MAOK;AACH,YAAMG,4BAA4B,GAAlC;AACA,YAAMC,6BAA6B,GAAnC;;AAEA,YAAGH,OAAOI,IAAP,CAAYC,OAAZ,CAAoBC,UAApB,IAAkCJ,yBAAlC,IAA+DF,OAAOI,IAAP,CAAYC,OAAZ,CAAoBC,UAApB,IAAkCH,0BAApG,EAAgI;AAC9HlB,iBAAO;AACLC,2DAA6Cc,OAAOI,IAAP,CAAYC,OAAZ,CAAoBE,aAD5D;AAELN,kBAAMD,OAAOI;AAFR,WAAP;AAID,SALD,MAOEpB,QAAQgB,OAAOI,IAAf;AACH;AACF,KA7CD;AA8CD,GAtDM,CAAP;AAuDD,CAzDD;;kBA2DetB,O","file":"cieloTransaction.js","sourcesContent":["import httpReq from 'superagent'\n\n// {\n//   totalAmount: 0\n//   creditCard: {\n//    cardNumber: this.cardNumber,\n//    nameFromCard: this.nameFromCard,\n//    validate: this.validate,\n//    cvv: this.cvv,\n//    brand: ''\n//  }\n//}\n\nconst validate = (paymentData) => {\n  \n  return paymentData.totalAmount &&\n  paymentData.cardNumber &&\n  paymentData.nameFromCard &&\n  paymentData.validate &&\n  paymentData.cvv &&\n  paymentData.brand\n}\n\nconst creditCardInstallments = 1\n\nconst service = (paymentData) => {\n\n  return new Promise ((resolve, reject) => {\n\n    if(!validate(paymentData)) {\n      reject({\n        message: \"There's any payment field missing\"\n      })\n    }\n\n    httpReq.post(process.env.CIELO_API_REQUEST + \"/1/sales\")\n    .send(JSON.stringify({\n      \"MerchantOrderId\": process.env.CIELO_API_MERCHANTID,\n      \"Customer\":{\n         \"Name\": paymentData.nameFromCard\n      },\n      \"Payment\":{\n        \"Type\":\"CreditCard\",\n        \"Amount\": paymentData.totalAmount,\n        \"Installments\": creditCardInstallments,\n        \"CreditCard\":{\n          \"CardNumber\":paymentData.cardNumber,\n          \"Holder\": paymentData.nameFromCard,\n          \"ExpirationDate\": paymentData.validate,\n          \"SecurityCode\":paymentData.cvv,\n          \"Brand\": paymentData.brand\n        }\n      }\n    }))\n    .set('Content-Type', \"application/json\")\n    .set(\"MerchantId\", process.env.CIELO_API_MERCHANTID)\n    .set(\"MerchantKey\", process.env.CIELO_API_MERCHANTKEY)\n\n    .end((err, apiRes) => {\n      \n      if(err){\n        reject({\n          message: \"Error at card operator transaction\",\n          data: err\n        })\n      }\n\n      else {\n        const transactionStatusApproved = \"4\"\n        const transactionStatusApproved2 = \"6\"\n\n        if(apiRes.body.Payment.ReturnCode != transactionStatusApproved && apiRes.body.Payment.ReturnCode != transactionStatusApproved2) {\n          reject({\n            message: `The transaction not worked well: ${apiRes.body.Payment.ReturnMessage}`,\n            data: apiRes.body\n          })\n        }\n        else\n          resolve(apiRes.body)\n      }\n    })\n  })\n}\n\nexport default service"]}