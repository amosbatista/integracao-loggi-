{"version":3,"sources":["../../../../src/test/api/services/modelTest.js"],"names":["expect","chai","describe","it","model","to","be","an","expectService0ToBeAnObject","that","have","property","is","a"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAIA,SAASC,eAAKD,MAAlB;;AAEAE,SAAS,mBAAT,EAA8B,YAAM;;AAElCC,KAAG,oBAAH,EAAyB,YAAM;AAC7BH,WAAOI,eAAP,EAAcC,EAAd,CAAiBC,EAAjB,CAAoBC,EAApB,CAAuB,OAAvB;AACD,GAFD;;AAIAJ,KAAG,0CAAH,EAA+C,YAAM;AACnD,QAAMK,6BAA6BR,OAAOI,gBAAM,CAAN,CAAP,EAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B,CAAnC;;AAEAC,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,IAA9C,EAAoDF,IAApD,CAAyDG,EAAzD,CAA4DC,CAA5D,CAA8D,QAA9D;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,MAA9C,EAAsDF,IAAtD,CAA2DG,EAA3D,CAA8DC,CAA9D,CAAgE,QAAhE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,OAA9C,EAAuDF,IAAvD,CAA4DG,EAA5D,CAA+DC,CAA/D,CAAiE,QAAjE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,WAA9C,EAA2DF,IAA3D,CAAgEG,EAAhE,CAAmEC,CAAnE,CAAqE,QAArE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,aAA9C,EAA6DF,IAA7D,CAAkEG,EAAlE,CAAqEC,CAArE,CAAuE,QAAvE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,YAA9C,EAA4DF,IAA5D,CAAiEG,EAAjE,CAAoEC,CAApE,CAAsE,QAAtE;AAED,GAVD;;AAYAV,KAAG,+CAAH,EAAoD,YAAM;AACxD,QAAMK,6BAA6BR,OAAOI,gBAAM,CAAN,CAAP,EAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B,CAAnC;;AAEAC,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,IAA9C,EAAoDF,IAApD,CAAyDG,EAAzD,CAA4DC,CAA5D,CAA8D,QAA9D;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,MAA9C,EAAsDF,IAAtD,CAA2DG,EAA3D,CAA8DC,CAA9D,CAAgE,QAAhE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,OAA9C,EAAuDF,IAAvD,CAA4DG,EAA5D,CAA+DC,CAA/D,CAAiE,QAAjE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,WAA9C,EAA2DF,IAA3D,CAAgEG,EAAhE,CAAmEC,CAAnE,CAAqE,QAArE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,aAA9C,EAA6DF,IAA7D,CAAkEG,EAAlE,CAAqEC,CAArE,CAAuE,QAAvE;AACAL,+BAA2BC,IAA3B,CAAgCC,IAAhC,CAAqCC,QAArC,CAA8C,YAA9C,EAA4DF,IAA5D,CAAiEG,EAAjE,CAAoEC,CAApE,CAAsE,QAAtE;AACD,GATD;AAUD,CA5BD","file":"modelTest.js","sourcesContent":["import model from '../../../api/services/model'\nimport chai from 'chai'\n\nlet expect = chai.expect\n\ndescribe('Service list test', () => {\n\n  it('should be an array', () => {\n    expect(model).to.be.an('array')\n  })\n\n  it('first service should serves service data', () => {\n    const expectService0ToBeAnObject = expect(model[0]).to.be.an('object')\n      \n    expectService0ToBeAnObject.that.have.property('id').that.is.a('number')\n    expectService0ToBeAnObject.that.have.property('text').that.is.a('string')\n    expectService0ToBeAnObject.that.have.property('value').that.is.a('number')\n    expectService0ToBeAnObject.that.have.property('formatted').that.is.a('string')\n    expectService0ToBeAnObject.that.have.property('description').that.is.a('string')\n    expectService0ToBeAnObject.that.have.property('quantifier').that.is.a('string')\n      \n  })\n\n  it('second service should serves service data too', () => {\n    const expectService0ToBeAnObject = expect(model[1]).to.be.an('object')\n      \n    expectService0ToBeAnObject.that.have.property('id').that.is.a('number')\n    expectService0ToBeAnObject.that.have.property('text').that.is.a('string')\n    expectService0ToBeAnObject.that.have.property('value').that.is.a('number')\n    expectService0ToBeAnObject.that.have.property('formatted').that.is.a('string')\n    expectService0ToBeAnObject.that.have.property('description').that.is.a('string')\n    expectService0ToBeAnObject.that.have.property('quantifier').that.is.a('string')\n  })\n})"]}